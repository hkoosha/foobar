/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.koosha.foobar.connect.warehouse.rx.generated.api;

import io.koosha.foobar.connect.warehouse.rx.generated.api.Availability;
import io.koosha.foobar.connect.warehouse.rx.generated.api.AvailabilityCreateRequest;
import io.koosha.foobar.connect.warehouse.rx.generated.api.AvailabilityUpdateRequest;
import io.koosha.foobar.connect.warehouse.rx.generated.api.EntityBadValueApiError;
import io.koosha.foobar.connect.warehouse.rx.generated.api.EntityIllegalStateApiError;
import io.koosha.foobar.connect.warehouse.rx.generated.api.EntityNotFoundApiError;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for AvailabilityApi
 */
@Ignore
public class AvailabilityApiTest {

    private final AvailabilityApi api = new AvailabilityApi();

    
    /**
     * 
     *
     * 
     */
    @Test
    public void deleteAvailabilityTest()  {
        UUID productId = null;
        UUID sellerId = null;
        api.deleteAvailability(productId, sellerId).block();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void getAvailabilitiesTest()  {
        UUID productId = null;
        List<Availability> response = api.getAvailabilities(productId).collectList().block();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void getAvailabilityTest()  {
        UUID productId = null;
        UUID sellerId = null;
        Availability response = api.getAvailability(productId, sellerId).block();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void patchAvailabilityTest()  {
        UUID productId = null;
        UUID sellerId = null;
        AvailabilityUpdateRequest availabilityUpdateRequest = null;
        Availability response = api.patchAvailability(productId, sellerId, availabilityUpdateRequest).block();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void postAvailabilityTest()  {
        UUID productId = null;
        AvailabilityCreateRequest availabilityCreateRequest = null;
        Availability response = api.postAvailability(productId, availabilityCreateRequest).block();

        // TODO: test validations
    }
    
}
