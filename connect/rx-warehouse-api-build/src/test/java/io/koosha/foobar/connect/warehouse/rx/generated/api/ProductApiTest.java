/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.koosha.foobar.connect.warehouse.rx.generated.api;

import io.koosha.foobar.connect.warehouse.rx.generated.api.EntityBadValueApiError;
import io.koosha.foobar.connect.warehouse.rx.generated.api.EntityIllegalStateApiError;
import io.koosha.foobar.connect.warehouse.rx.generated.api.EntityNotFoundApiError;
import io.koosha.foobar.connect.warehouse.rx.generated.api.Product;
import io.koosha.foobar.connect.warehouse.rx.generated.api.ProductCreateRequest;
import io.koosha.foobar.connect.warehouse.rx.generated.api.ProductUpdateRequest;
import java.util.UUID;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

/**
 * API tests for ProductApi
 */
@Ignore
public class ProductApiTest {

    private final ProductApi api = new ProductApi();

    
    /**
     * 
     *
     * 
     */
    @Test
    public void deleteProductTest()  {
        UUID productId = null;
        api.deleteProduct(productId).block();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void getProductTest()  {
        UUID productId = null;
        Product response = api.getProduct(productId).block();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void getProductsTest()  {
        List<Product> response = api.getProducts().collectList().block();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void patchProductTest()  {
        UUID productId = null;
        ProductUpdateRequest productUpdateRequest = null;
        Product response = api.patchProduct(productId, productUpdateRequest).block();

        // TODO: test validations
    }
    
    /**
     * 
     *
     * 
     */
    @Test
    public void postProductTest()  {
        ProductCreateRequest productCreateRequest = null;
        Product response = api.postProduct(productCreateRequest).block();

        // TODO: test validations
    }
    
}
