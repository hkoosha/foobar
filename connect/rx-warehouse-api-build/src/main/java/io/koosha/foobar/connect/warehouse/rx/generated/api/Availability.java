/*
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.koosha.foobar.connect.warehouse.rx.generated.api;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * Availability
 */
@JsonPropertyOrder({
  Availability.JSON_PROPERTY_SELLER_ID,
  Availability.JSON_PROPERTY_UNITS_AVAILABLE,
  Availability.JSON_PROPERTY_FROZEN_UNITS,
  Availability.JSON_PROPERTY_PRICE_PER_UNIT
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class Availability {
  public static final String JSON_PROPERTY_SELLER_ID = "sellerId";
  private UUID sellerId;

  public static final String JSON_PROPERTY_UNITS_AVAILABLE = "unitsAvailable";
  private Long unitsAvailable;

  public static final String JSON_PROPERTY_FROZEN_UNITS = "frozenUnits";
  private Long frozenUnits;

  public static final String JSON_PROPERTY_PRICE_PER_UNIT = "pricePerUnit";
  private Long pricePerUnit;

  public Availability() {
  }

  public Availability sellerId(UUID sellerId) {
    
    this.sellerId = sellerId;
    return this;
  }

   /**
   * Get sellerId
   * @return sellerId
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_SELLER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getSellerId() {
    return sellerId;
  }


  @JsonProperty(JSON_PROPERTY_SELLER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSellerId(UUID sellerId) {
    this.sellerId = sellerId;
  }


  public Availability unitsAvailable(Long unitsAvailable) {
    
    this.unitsAvailable = unitsAvailable;
    return this;
  }

   /**
   * Get unitsAvailable
   * @return unitsAvailable
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_UNITS_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getUnitsAvailable() {
    return unitsAvailable;
  }


  @JsonProperty(JSON_PROPERTY_UNITS_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUnitsAvailable(Long unitsAvailable) {
    this.unitsAvailable = unitsAvailable;
  }


  public Availability frozenUnits(Long frozenUnits) {
    
    this.frozenUnits = frozenUnits;
    return this;
  }

   /**
   * Get frozenUnits
   * @return frozenUnits
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_FROZEN_UNITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getFrozenUnits() {
    return frozenUnits;
  }


  @JsonProperty(JSON_PROPERTY_FROZEN_UNITS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setFrozenUnits(Long frozenUnits) {
    this.frozenUnits = frozenUnits;
  }


  public Availability pricePerUnit(Long pricePerUnit) {
    
    this.pricePerUnit = pricePerUnit;
    return this;
  }

   /**
   * Get pricePerUnit
   * @return pricePerUnit
  **/
  @javax.annotation.Nonnull
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_PRICE_PER_UNIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Long getPricePerUnit() {
    return pricePerUnit;
  }


  @JsonProperty(JSON_PROPERTY_PRICE_PER_UNIT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPricePerUnit(Long pricePerUnit) {
    this.pricePerUnit = pricePerUnit;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Availability availability = (Availability) o;
    return Objects.equals(this.sellerId, availability.sellerId) &&
        Objects.equals(this.unitsAvailable, availability.unitsAvailable) &&
        Objects.equals(this.frozenUnits, availability.frozenUnits) &&
        Objects.equals(this.pricePerUnit, availability.pricePerUnit);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sellerId, unitsAvailable, frozenUnits, pricePerUnit);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Availability {\n");
    sb.append("    sellerId: ").append(toIndentedString(sellerId)).append("\n");
    sb.append("    unitsAvailable: ").append(toIndentedString(unitsAvailable)).append("\n");
    sb.append("    frozenUnits: ").append(toIndentedString(frozenUnits)).append("\n");
    sb.append("    pricePerUnit: ").append(toIndentedString(pricePerUnit)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

